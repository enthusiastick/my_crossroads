-content_for :title do
  MyCrossroads: #{@character.name}
.row
  .small-12.columns
    %nav{"aria-label": "You are here:", role: "navigation"}
      %ul.breadcrumbs
        %li
          =link_to "My Characters", characters_path
        %li
          %span.show-for-sr Current:
          =@character.name
    %h1.text-center
      =@character.name
      %a{"data-open": "historyModal"}
        %i.fa.fa-book{"aria-hidden": "true"}
    %h3.text-center= @character.race.titleize
    -unless @character.drake.nil?
      %p.text-center
        =number_with_delimiter(@character.drake)
        Drake
    -unless @character.inventories.empty?
      .callout
        %h2.text-center Components Inventory
        %table.hover.datatables{ data: { page: { length: "25" }, order: "[[1,\"asc\"]]" } }
          %thead
            %tr
              %th.text-right Quantity
              %th Component
              -if @character.artisan? || @character.scholar?
                %th.text-center Crafting
              -else
                %th.text-center
                  %i.fa.fa-question-circle
              -if @character.alchemist? || @character.scholar?
                %th.text-center Processes
              -else
                %th.text-center
                  %i.fa.fa-question-circle
              -if @character.ritualist? || @character.scholar?
                %th.text-center Ritual
              -else
                %th.text-center
                  %i.fa.fa-question-circle
          %tbody
            -@character.inventories.each do |inventory|
              %tr
                %td.text-right= inventory.quantity
                %td
                  =inventory.ingredient.name
                  -if inventory.ingredient.picture.present?
                    %a.float-right{ data: { open: inventory.ingredient.name.parameterize } }
                      %i.fa.fa-eye
                %td.text-center
                  -if inventory.unlocked_crafting?
                    =inventory.ingredient.crafting
                  -else
                    %i.fa.fa-lock
                %td
                  %span
                    -if @character.alchemist? || @character.scholar?
                      Extraction:
                    -else
                      %i.fa.fa-question-circle
                    -if inventory.unlocked_extraction?
                      =inventory.ingredient.process_extraction
                      %br/
                    -else
                      %i.fa.fa-lock
                      &nbsp;
                  %span
                    -if @character.alchemist? || @character.scholar?
                      Calcination:
                    -else
                      %i.fa.fa-question-circle
                    -if inventory.unlocked_calcination?
                      =inventory.ingredient.process_calcination
                      %br/
                    -else
                      %i.fa.fa-lock
                      &nbsp;
                  %span
                    -if @character.alchemist? || @character.scholar?
                      Dissolution:
                    -else
                      %i.fa.fa-question-circle
                    -if inventory.unlocked_dissolution?
                      =inventory.ingredient.process_dissolution
                      %br/
                    -else
                      %i.fa.fa-lock
                      &nbsp;
                  %span
                    -if @character.alchemist? || @character.scholar?
                      Concentration:
                    -else
                      %i.fa.fa-question-circle
                    -if inventory.unlocked_concentration?
                      =inventory.ingredient.process_concentration
                    -else
                      %i.fa.fa-lock
                      &nbsp;
                %td
                  -if @character.ritualist? || @character.scholar?
                    -if inventory.unlocked_ritual?
                      =inventory.ingredient.ritual_properties.to_sentence
                    -else
                      Attribute:
                      %i.fa.fa-question-circle
                      &nbsp;
                      Elemental Affinity:
                      %i.fa.fa-question-circle
                      &nbsp;
                      Gender:
                      %i.fa.fa-question-circle
                  -else
                    -if inventory.unlocked_ritual?
                      =inventory.ingredient.ritual_properties.to_sentence
                    -else
                      -3.times do
                        %i.fa.fa-question-circle
                        %i.fa.fa-lock
                        &nbsp;
    -unless @character.professions.empty?
      -@character.professions.order(:name).each do |profession|
        -unless @character.profession_links.where(profession: profession).empty?
          .callout
            %h2.text-center= profession.name
            .menu-centered
              %ul.menu
                -@character.profession_links.where(profession: profession).order(:name).each do |link|
                  %li
                    =link_to link.url, target: "_blank" do
                      %i.fa.fa-link
                      =link.name
.reveal#historyModal{"data-reveal": ""}
  %h2.margin-bottom-none.text-center
    Character History
    =link_to edit_character_path(@character) do
      %i.fa.fa-pencil-square-o{"aria-hidden": "true"}
  %hr/
  -if @character.history.blank?
    %p
      %em (blank)
  -else
    =raw @markdown.render(@character.history)
  %button.close-button{"data-close": "", "aria-label": "Close modal", "type": "button"}
    %span{"aria-hidden": "true"}
      &times;
-@character.inventories.each do |inventory|
  -if inventory.ingredient.picture.present?
    .reveal{ id: "#{inventory.ingredient.name.parameterize}", data: { reveal: "" } }
      %span.label= inventory.ingredient.name
      =image_tag(inventory.ingredient.picture.url, alt: "Picture of #{inventory.ingredient.name}")
      %button.close-button{ data: { close: "" }, aria: { label:  "Close modal"}, type: "button" }
        %span{ aria: { hidden: "true" } }
          &times;
